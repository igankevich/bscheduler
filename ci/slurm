#!/bin/guile3.0
!#

(use-modules
  (oop goops)
  (ice-9 format)
  (ice-9 ftw)
  (ice-9 popen)
  (ice-9 textual-ports)
  (slurm)
  (slurm-ci))

(define tag
  (let ((port (open-input-pipe "git describe --tags --exact-match")))
    (define output (string-trim-both (get-string-all port)))
    (close-pipe port)
    output))

(define branch (getenv "CI_BUILD_BRANCH"))

(define* (make-job . rest)
  (define job (apply make (cons <job> rest)))
  (set! (job-partitions job) '("ci"))
  (guix-environment-wrap!
    job (make <guix-environment>
          #:channels "guix/channels.scm"
          #:manifest "guix/manifest.scm"))
  (gitbucket-wrap!
    job (make <gitbucket-build>)))

(define all-jobs
  (append
    (map
      (lambda (lst)
        (define name (car lst))
        (define meson-arguments (cdr lst))
        (make-job
          #:script
          (string-join
            (list
              "#!/bin/sh"
              "set -ex"
              "export LANG=en_US.utf-8 PYTHONUNBUFFERED=1"
              "d=$(mktemp -d /tmp/gitbucket-XXXXXX)"
              (format #f "meson ~a . $d" (string-join meson-arguments " "))
              "cd $d"
              "meson test --timeout-multiplier 3"
              "rm -rf --one-file-system --preserve-root $d")
            "\n"
            'suffix)
          #:name name))
      '(("no-dtests" "-Dwith_dtests=false")
        ("default")
        ("sanitize-address" "-Dwith_dtests=true" "-Db_sanitize=address")))
    (list
      (make-job
        #:script
        (string-join
          (list
            "#!/bin/sh"
            "set -ex"
            "outdir=$(pwd)"
            "d=$(mktemp -d /tmp/gitbucket-XXXXXX)"
            "meson . $d"
            "cd $d"
            "ninja -v clang-tidy"
            "rm -rf --one-file-system --preserve-root $d")
          "\n")
        #:name "clang-tidy"))
    (if (and branch (string=? branch "dev"))
      (list
        (make-job
          #:name "site"
          #:script
          (string-join
            (list
              "#!/bin/sh"
              "set -ex"
              "d=$(mktemp -d /tmp/gitbucket-XXXXXX)"
              "export LANG=en_US.utf-8 PYTHONUNBUFFERED=1"
              "meson -Dwith_site=true . $d"
              "cd $d"
              "ninja -v site"
              "rsync -acv --delete src/subordination/site/ /fennec/home/gitbucket/.sites/subordination/"
              "rm -rf --one-file-system $d")
            "\n"
            'suffix)))
      '())))

(setenv "SBN_MANIFEST" "ci,site")
(exit (gitbucket-run all-jobs))

;; vim:filetype=scheme
