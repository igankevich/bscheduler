#!/bin/sh

if test "$CI_PULL_REQUEST" != "false"
then
    echo "Skipping pull requests"
    exit 0
fi

export GUIX_MANIFEST=guix/manifest.scm
export GUIX_CHANNELS=guix/channels.scm

echo
echo "Environment:"
env | grep -E '^(CI_|HOME|GUIX)' | sort | column -t -s= -R 1
echo

if test "$CI_BUILD_BRANCH" = "site"
then
    echo "Building the site"
    echo
/usr/libexec/gitbucket-ci << 'EOF'
export SBN_MANIFEST=ci,site
slurm_job "site" sh -c '
    set -ex
    export PYTHONUNBUFFERED=1
    dst="cmmshq.ru:/srv/subordination"
    d=$(mktemp --directory /tmp/sbn-XXXXXXXX)
    meson -Dwith_site=true . $d
    cd $d
    ninja -v site
    rsync -e "ssh -p 22222" -acv --delete src/subordination/site/ $dst/
    rm -rf $d
'
EOF
else
    echo "Building the project"
    echo
/usr/libexec/gitbucket-ci << 'EOF'
export SBN_MANIFEST=ci

test_flags() {
    flags="$@"
    echo '
        set -ex
        export PYTHONUNBUFFERED=1
        d=$(mktemp --directory /tmp/sbn-XXXXXXXX)
        meson '$flags' . $d
        cd $d
        meson test --verbose
        rm -rf $d'
}

slurm_job "sanitize-address" sh -c "$(test_flags -Db_sanitize=address)"
slurm_job "sanitize-none" sh -c "$(test_flags -Db_sanitize=none)"
EOF
fi
