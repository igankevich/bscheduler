#!/bin/sh

#set -x

while [ -n "$1" ]; do
	case "$1" in
		--cluster|-c)
			shift
			cluster=$1
			shift
			;;
		--bridge|-b)
			shift
			bridge=$1
			shift
			;;
		--nodes|-n)
			shift
			nodes=$1
			shift
			;;
		--user|-u)
			shift
			user=$1
			shift
			;;
		--)
			shift
			app=$*
			while [ -n "$1" ]; do shift; done
			;;
		*)
			echo "Unknown option: $1" >&2
			exit 2
			;;
	esac
done

echo "Cluster start time: $START_TIME" 1>&2

node0=$(echo $nodes | sed -rne 's/(.*)-(.*)/\1/p')
node1=$(echo $nodes | sed -rne 's/(.*)-(.*)/\2/p')

echo "Nodes = $node0-$node1"
#exit 0

usage() {
	echo "USAGE: $(basename $0) -c CLUSTER -n NODES -- APP"
}

del_cluster() {
	for n in $(ip netns list | grep $cluster); do
		ip netns delete $n
	done
	ip link list | sed -rne 's/.*(v'$cluster'[0-9]+).*/\1/p' |
	while read line; do
		ip link del $line 2>/dev/null;
	done
	if [ "$bridge" != "$cluster" ]; then
		if ip link list | grep "$cluster:" >/dev/null; then
			ip link set dev $cluster down
			brctl delbr $cluster
		fi
	fi
}

if [ -z "$nodes" ] || [ -z "$cluster" ]; then
	usage
	exit 1
fi

if [ -z "$user" ]; then
	user=$USER
fi

del_cluster
for n in $(seq $node0 $node1); do
	name=$cluster$n
	x0=$(expr $n / 255)
	x1=$(expr $n % 255)
	ip netns add $name
	ip netns exec $name ip link set dev lo up
	ip link add v$cluster$n type veth peer name veth0
	ip link set veth0 netns $name
	ip netns exec $name ifconfig veth0 10.0.$x0.$x1/16 up
	ifconfig v$cluster$n 10.1.$x0.$x1/16 up
done

if [ -z "$bridge" ]; then
	# create temporary bridge
	brctl addbr $cluster
	for n in $(seq $node0 $node1); do
		brctl addif $cluster v$cluster$n
	done
	ip link set dev $cluster up
else
	# use existing bridge
	for n in $(seq $node0 $node1); do
		brctl addif $bridge v$cluster$n
	done
fi

script=$(mktemp)
cat >$script << EOF
#sudo -u $user $app >/tmp/$cluster\$1.out 2>&1
export START_ID=\$2
export START_TIME=$START_TIME
$app >/tmp/$cluster\$1.out 2>&1
EOF
chmod +x $script
for n in $(seq $node0 $node1); do
	start_id=$(expr 1000 \* $n)
	nohup ip netns exec $cluster$n $script $n $start_id >/dev/null 2>&1 &
done
wait

#grep -h ' grph ' /tmp/$cluster*.out | sort -nk1 -t' ' 
cat /tmp/$cluster*.out
rm /tmp/$cluster*.out
rm $script

del_cluster
