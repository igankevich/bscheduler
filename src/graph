#!/bin/sh

cmd=$@

if [ -z "$cmd" ]; then
	cmd="./test_discovery"
fi

# header
cat << EOF
<!DOCTYPE html>
<html>
<head>
	<title>Replay graph</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
	<script src="../js/lib/jquery-1.10.2.js"></script>
	<script src="../js/lib/jquery-ui.js"></script>
	<script src="../js/lib/raphael-min.js"></script>
	<script src="../js/lib/springy.js"></script>
	<script src="../js/lib/springy-raphael.js"></script>
	<style>
	body {
		margin: 0px;
	    -webkit-touch-callout: none;
	    -webkit-user-select: none;
	    -khtml-user-select: none;
	    -moz-user-select: none;
	    -ms-user-select: none;
	    user-select: none;
	}
	a {
	    color: #2a7ae2;
	    text-decoration: none;
	}
	
	a:visited {
	    color: #2a7ae2;
	}
	
	a:hover {
	    color: #2a7ae2;
	    text-decoration: underline;
	}
	#springydemo {
		background: #eee;
		display: block;
		position: absolute
		z-index: -1;
	}
	.hud {
		position: absolute;
		left: 10%;
		top: 40px;
		width: 80%;
		z-index: 10000;
	}
	.ui-slider-range {
		background: #404040;
	}
	.ui-slider .ui-slider-handle {
		background: #505050;
		border-style: none;
	}
	.ui-slider {
		border-style: none;
		vertical-align: top;
	}
	#legend {
		display: inline-block;
		width: 240px;
		padding-bottom: 1em;
	}
	#download {
		display: inline-block;
		float: right;
	}
	#springydemo {
		position: fixed;
	}
	</style>
</head>
<body>
<script>

// global object to store nodes and edges variables
var g = {}
var log = [
	{
		redo: function () {},
		undo: function () {},
		time: 0
	}
]
var logline = 1
var currentLine = 0
var graph = new Springy.Graph()
var startTime = []

// GENERATED CODE
EOF

#$cmd 2>&1 | sed -rne 's/^([0-9]+).*grph (.*)/\2;log[logline-1].time=\1*1e-6;/p'
$cmd

# footer
cat << 'EOF'
// END OF GENERATED CODE

function toPrecision(x, n) {
	var m = Math.pow(10, n)
	return Math.floor(x * m) / m
}

function showLineNo() {
	var maxTime = Math.max.apply(Math, startTime);
	$('#startTime').html('Start time: ' + toPrecision(maxTime, 2) + 'ms')
	$('#time').html('Time: ' + toPrecision(log[currentLine].time, 2) + 'ms')
	$('#lineno').html('Line: ' + (currentLine + 1) + '/' + log.length)
}

function gotoLine(targetLine) {
	if (targetLine == currentLine) return;
	if (targetLine > currentLine) {
		for (var i=currentLine+1; i<=targetLine; ++i) {
			log[i].redo()
		}
	}
	if (targetLine < currentLine) {
		for (var i=currentLine; i>targetLine; --i) {
			log[i].undo()
		}
	}
	currentLine = targetLine
	showLineNo()
}

function changeLogLine() {
	var targetLine = $('#logSlider').slider("value")
	gotoLine(targetLine)
}

function resizeCanvas() {
	console.log('321')
	$('#springydemo').width(window.innerWidth)
	$('#springydemo').height(window.innerHeight)
}

$(window).resize(function () {
	resizeCanvas()
});

$(document).ready(function(){
	showLineNo()
	$('#springydemo').springyRaphael({
		graph: graph
	});
	$(window).resize()
	$('#downloadLink').click(function () {
		$('#downloadLink').attr('href', downloadSVG())
	})
	$('#logSlider').slider({
		value: 0,
		max: logline-1,
		range: "min",
		change: changeLogLine,
		slide: changeLogLine
	});
});
</script>

	<div class="hud">
		<div id="legend">
			<span id="startTime"></span><br/>
			<span id="time"></span><br/>
			<span id="lineno"></span>
		</div>
		<div id="download">
			<a id="downloadLink" href="#" download="graph.svg" href-lang="image/svg+xml">Download SVG</a>
		</div>
		<div id="logSlider"></div>
	</div>
	<div id="springydemo" width="800" height="600"></div>
</body>
</html>
EOF
